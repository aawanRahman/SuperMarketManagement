
@page "/editcategory/{Id}"
@using UseCases.UseCasesInterfaces

<h3>Edit  Category</h3>
@inject UseCases.UseCasesInterfaces.IeditCategoryUseCase editCategoryUseCase
@inject IGetCategoryByIdUseCase getCategoryByIdUseCase
@inject NavigationManager navigationManager
@if(category!=null)
{
    <EditForm Model="category"  OnValidSubmit="onValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class ="form-group" style="padding : 5px">
            <label for="name"> Name</label>
            <InputText id="name" @bind-Value = "category.Name" class="form-control"></InputText>
        </div>

        <div class ="form-group" style="padding : 5px">
            <label for="description"> Description</label>
            <InputText id="description" @bind-Value = "category.Description" class="form-control"></InputText>
        </div>
        <br>
        <button type="submit" class="btn btn-outline-success"> Save </button>
        <button type="button" class="btn btn-secondary" @onclick="OnCancel" > Cancel </button>

    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private Category category;
    protected override void OnInitialized()
    {
        base.OnInitialized();

    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        int id = int.Parse(Id);
        this.category =  getCategoryByIdUseCase.getCategorybyId(id);
    }
    protected void onValidSubmit()
    {

        editCategoryUseCase.editCategory(this.category);
        navigationManager.NavigateTo("/categories");

    }
    private void OnCancel(){
       navigationManager.NavigateTo("/categories");

    }

}
