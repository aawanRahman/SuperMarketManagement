@page "/addproduct"
<h3>Add New Product</h3>

@inject UseCases.UseCasesInterfaces.IAddProductUseCase addProductUseCase
@inject UseCases.UseCasesInterfaces.IViewCategoriesUseCases viewCategoriesUseCases

@inject NavigationManager navigationManager
@if(product!=null)
{
    <EditForm Model="product"  OnValidSubmit="onValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class ="form-group" style="padding : 5px" >
            <label for="name"> Name</label>
            <InputText id="name" @bind-Value = "product.Name" class="form-control"></InputText>
        </div>
        <div class ="form-group" style="padding : 5px" >
            <label for="category"> Category</label>
            <select id="category"  @bind= "product.CategoryId" class="form-control">
                <option selected></option>
                @foreach (var category in categories)
                {
                    <option value="@category.Id"> @category.Name</option>
                }

            </select>
            
        </div>

        <div class ="form-group" style="padding : 5px">
            <label for="quantity"> Quantity</label>
            <InputNumber id="quantity" @bind-Value = "product.Quantity" class="form-control"></InputNumber>
        </div>
        <div class ="form-group" style="padding : 5px">
            <label for="price"> Price</label>
            <InputNumber id="price" @bind-Value = "product.Price" class="form-control"></InputNumber>
        </div>
        <br>
        <button type="submit" class="btn btn-outline-success"> Save </button>
        <button type="button" class="btn btn-secondary" @onclick="OnCancel" > Cancel </button>

    </EditForm>
}

@code {
    private Product product;
    private IEnumerable<Category> categories;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        product = new Product();
        categories = viewCategoriesUseCases.Execute();
    }
    protected void onValidSubmit()
    {

        addProductUseCase.addNewProduct(product);
        navigationManager.NavigateTo("/products");

    }
    private void OnCancel(){
       navigationManager.NavigateTo("/products");

    }

}
